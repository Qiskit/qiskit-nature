# This code is part of Qiskit.
#
# (C) Copyright IBM 2021.
#
# This code is licensed under the Apache License, Version 2.0. You may
# obtain a copy of this license in the LICENSE.txt file in the root directory
# of this source tree or at http://www.apache.org/licenses/LICENSE-2.0.
#
# Any modifications or derivative works of this code must retain this
# copyright notice, and modified files need to carry a notice indicating
# that they have been altered from the originals.
"""Tests Fermionic Operator builder."""
from qiskit_nature.components.bosonic_bases import HarmonicBasis
from qiskit_nature.problems.second_quantization.vibrational.spin_op_builder import _create_labels
from test import QiskitNatureTestCase
from qiskit_nature.drivers import GaussianForcesDriver


class TestVibrationalSpinOpBuilder(QiskitNatureTestCase):
    """Tests Vibrational Spin Op builder."""

    def test_create_labels(self):
        """Tests that correct labels are built."""
        logfile = self.get_resource_path('CO2_freq_B3LYP_ccpVDZ.log')
        driver = GaussianForcesDriver(logfile=logfile)

        expected_labels = [('+_0*0 -_0*0', 1215.682529375), ('+_0*1 -_0*1', 3656.9551768750007),
                           ('+_1*0 -_1*0', 682.5053337500001), ('+_1*0 -_1*1', -46.77167173323271),
                           ('+_1*1 -_1*0', -46.77167173323271), ('+_1*1 -_1*1', 2050.1464387500005),
                           ('+_2*0 -_2*0', 329.41209562500006), ('+_2*1 -_2*1', 992.0224281250003),
                           ('+_3*0 -_3*0', 328.12046812500006), ('+_3*1 -_3*1', 985.5642906250002),
                           ('+_1*0 +_0*0 -_1*0 -_0*0', 5.039653750000002),
                           ('+_1*0 +_0*1 -_1*0 -_0*1', 15.118961250000009),
                           ('+_1*0 +_0*0 -_1*1 -_0*0', -89.0908653064951),
                           ('+_1*0 +_0*1 -_1*1 -_0*1', -267.27259591948535),
                           ('+_1*1 +_0*0 -_1*0 -_0*0', -89.0908653064951),
                           ('+_1*1 +_0*1 -_1*0 -_0*1', -267.27259591948535),
                           ('+_1*1 +_0*0 -_1*1 -_0*0', 15.118961250000009),
                           ('+_1*1 +_0*1 -_1*1 -_0*1', 45.35688375000003),
                           ('+_2*0 +_0*0 -_2*0 -_0*0', -6.3850425000000035),
                           ('+_2*0 +_0*1 -_2*0 -_0*1', -19.15512750000001),
                           ('+_2*0 +_1*0 -_2*0 -_1*0', -2.5657231250000008),
                           ('+_2*0 +_1*0 -_2*0 -_1*1', 21.644966371722845),
                           ('+_2*0 +_1*1 -_2*0 -_1*0', 21.644966371722845),
                           ('+_2*0 +_1*1 -_2*0 -_1*1', -7.697169375000003),
                           ('+_2*0 +_0*0 -_2*1 -_0*1', -2.0085637500000004),
                           ('+_2*0 +_0*1 -_2*1 -_0*0', -2.0085637500000004),
                           ('+_2*1 +_0*0 -_2*0 -_0*1', -2.0085637500000004),
                           ('+_2*1 +_0*1 -_2*0 -_0*0', -2.0085637500000004),
                           ('+_2*1 +_0*0 -_2*1 -_0*0', -19.15512750000001),
                           ('+_2*1 +_0*1 -_2*1 -_0*1', -57.46538250000003),
                           ('+_2*1 +_1*0 -_2*1 -_1*0', -7.697169375000004),
                           ('+_2*1 +_1*0 -_2*1 -_1*1', 64.93489911516855),
                           ('+_2*1 +_1*1 -_2*1 -_1*0', 64.93489911516855),
                           ('+_2*1 +_1*1 -_2*1 -_1*1', -23.091508125000015),
                           ('+_3*0 +_0*0 -_3*0 -_0*0', -4.595841875000001),
                           ('+_3*0 +_0*1 -_3*0 -_0*1', -13.787525625000006),
                           ('+_3*0 +_1*0 -_3*0 -_1*0', -1.683979375000001),
                           ('+_3*0 +_1*0 -_3*0 -_1*1', 6.412754934114709),
                           ('+_3*0 +_1*1 -_3*0 -_1*0', 6.412754934114709),
                           ('+_3*0 +_1*1 -_3*0 -_1*1', -5.051938125000003),
                           ('+_3*0 +_2*0 -_3*0 -_2*0', -0.5510218750000002),
                           ('+_3*0 +_2*1 -_3*0 -_2*1', -1.6530656250000009),
                           ('+_3*0 +_0*0 -_3*1 -_0*1', 3.5921675000000004),
                           ('+_3*0 +_0*1 -_3*1 -_0*0', 3.5921675000000004),
                           ('+_3*0 +_2*0 -_3*1 -_2*1', 7.946551250000004),
                           ('+_3*0 +_2*1 -_3*1 -_2*0', 7.946551250000004),
                           ('+_3*1 +_0*0 -_3*0 -_0*1', 3.5921675000000004),
                           ('+_3*1 +_0*1 -_3*0 -_0*0', 3.5921675000000004),
                           ('+_3*1 +_2*0 -_3*0 -_2*1', 7.946551250000004),
                           ('+_3*1 +_2*1 -_3*0 -_2*0', 7.946551250000004),
                           ('+_3*1 +_0*0 -_3*1 -_0*0', -13.787525625000006),
                           ('+_3*1 +_0*1 -_3*1 -_0*1', -41.362576875000016),
                           ('+_3*1 +_1*0 -_3*1 -_1*0', -5.051938125000002),
                           ('+_3*1 +_1*0 -_3*1 -_1*1', 19.238264802344126),
                           ('+_3*1 +_1*1 -_3*1 -_1*0', 19.238264802344126),
                           ('+_3*1 +_1*1 -_3*1 -_1*1', -15.15581437500001),
                           ('+_3*1 +_2*0 -_3*1 -_2*0', -1.6530656250000009),
                           ('+_3*1 +_2*1 -_3*1 -_2*1', -4.959196875000003),
                           ('+_2*0 +_1*0 +_0*0 -_2*1 -_1*0 -_0*1', -3.7351312500000025),
                           ('+_2*0 +_1*0 +_0*1 -_2*1 -_1*0 -_0*0', -3.7351312500000025),
                           ('+_2*0 +_1*0 +_0*0 -_2*1 -_1*1 -_0*1', 44.01468537435675),
                           ('+_2*0 +_1*0 +_0*1 -_2*1 -_1*1 -_0*0', 44.01468537435675),
                           ('+_2*0 +_1*1 +_0*0 -_2*1 -_1*0 -_0*1', 44.01468537435675),
                           ('+_2*0 +_1*1 +_0*1 -_2*1 -_1*0 -_0*0', 44.01468537435675),
                           ('+_2*0 +_1*1 +_0*0 -_2*1 -_1*1 -_0*1', -11.205393750000008),
                           ('+_2*0 +_1*1 +_0*1 -_2*1 -_1*1 -_0*0', -11.205393750000008),
                           ('+_2*1 +_1*0 +_0*0 -_2*0 -_1*0 -_0*1', -3.7351312500000025),
                           ('+_2*1 +_1*0 +_0*1 -_2*0 -_1*0 -_0*0', -3.7351312500000025),
                           ('+_2*1 +_1*0 +_0*0 -_2*0 -_1*1 -_0*1', 44.01468537435675),
                           ('+_2*1 +_1*0 +_0*1 -_2*0 -_1*1 -_0*0', 44.01468537435675),
                           ('+_2*1 +_1*1 +_0*0 -_2*0 -_1*0 -_0*1', 44.01468537435675),
                           ('+_2*1 +_1*1 +_0*1 -_2*0 -_1*0 -_0*0', 44.01468537435675),
                           ('+_2*1 +_1*1 +_0*0 -_2*0 -_1*1 -_0*1', -11.205393750000008),
                           ('+_2*1 +_1*1 +_0*1 -_2*0 -_1*1 -_0*0', -11.205393750000008),
                           ('+_3*0 +_2*0 +_0*0 -_3*0 -_2*1 -_0*1', 5.333592500000003),
                           ('+_3*0 +_2*0 +_0*1 -_3*0 -_2*1 -_0*0', 5.333592500000003),
                           ('+_3*0 +_2*1 +_0*0 -_3*0 -_2*0 -_0*1', 5.333592500000003),
                           ('+_3*0 +_2*1 +_0*1 -_3*0 -_2*0 -_0*0', 5.333592500000003),
                           ('+_3*0 +_1*0 +_0*0 -_3*1 -_1*0 -_0*1', 6.680006250000005),
                           ('+_3*0 +_1*0 +_0*1 -_3*1 -_1*0 -_0*0', 6.680006250000005),
                           ('+_3*0 +_1*0 +_0*0 -_3*1 -_1*1 -_0*1', -78.71701132125837),
                           ('+_3*0 +_1*0 +_0*1 -_3*1 -_1*1 -_0*0', -78.71701132125837),
                           ('+_3*0 +_1*1 +_0*0 -_3*1 -_1*0 -_0*1', -78.71701132125837),
                           ('+_3*0 +_1*1 +_0*1 -_3*1 -_1*0 -_0*0', -78.71701132125837),
                           ('+_3*0 +_1*1 +_0*0 -_3*1 -_1*1 -_0*1', 20.040018750000016),
                           ('+_3*0 +_1*1 +_0*1 -_3*1 -_1*1 -_0*0', 20.040018750000016),
                           ('+_3*0 +_2*0 +_0*0 -_3*1 -_2*0 -_0*1', -9.538736250000005),
                           ('+_3*0 +_2*0 +_0*1 -_3*1 -_2*0 -_0*0', -9.538736250000005),
                           ('+_3*0 +_2*0 +_0*0 -_3*1 -_2*1 -_0*0', -5.8219712500000025),
                           ('+_3*0 +_2*0 +_0*1 -_3*1 -_2*1 -_0*1', -17.46591375000001),
                           ('+_3*0 +_2*0 +_1*0 -_3*1 -_2*1 -_1*0', -2.8691487500000012),
                           ('+_3*0 +_2*0 +_1*0 -_3*1 -_2*1 -_1*1', 17.15529085952823),
                           ('+_3*0 +_2*0 +_1*1 -_3*1 -_2*1 -_1*0', 17.15529085952823),
                           ('+_3*0 +_2*0 +_1*1 -_3*1 -_2*1 -_1*1', -8.607446250000004),
                           ('+_3*0 +_2*1 +_0*0 -_3*1 -_2*0 -_0*0', -5.8219712500000025),
                           ('+_3*0 +_2*1 +_0*1 -_3*1 -_2*0 -_0*1', -17.46591375000001),
                           ('+_3*0 +_2*1 +_1*0 -_3*1 -_2*0 -_1*0', -2.8691487500000012),
                           ('+_3*0 +_2*1 +_1*0 -_3*1 -_2*0 -_1*1', 17.15529085952823),
                           ('+_3*0 +_2*1 +_1*1 -_3*1 -_2*0 -_1*0', 17.15529085952823),
                           ('+_3*0 +_2*1 +_1*1 -_3*1 -_2*0 -_1*1', -8.607446250000004),
                           ('+_3*0 +_2*1 +_0*0 -_3*1 -_2*1 -_0*1', -28.61620875000002),
                           ('+_3*0 +_2*1 +_0*1 -_3*1 -_2*1 -_0*0', -28.61620875000002),
                           ('+_3*1 +_1*0 +_0*0 -_3*0 -_1*0 -_0*1', 6.680006250000005),
                           ('+_3*1 +_1*0 +_0*1 -_3*0 -_1*0 -_0*0', 6.680006250000005),
                           ('+_3*1 +_1*0 +_0*0 -_3*0 -_1*1 -_0*1', -78.71701132125837),
                           ('+_3*1 +_1*0 +_0*1 -_3*0 -_1*1 -_0*0', -78.71701132125837),
                           ('+_3*1 +_1*1 +_0*0 -_3*0 -_1*0 -_0*1', -78.71701132125837),
                           ('+_3*1 +_1*1 +_0*1 -_3*0 -_1*0 -_0*0', -78.71701132125837),
                           ('+_3*1 +_1*1 +_0*0 -_3*0 -_1*1 -_0*1', 20.040018750000016),
                           ('+_3*1 +_1*1 +_0*1 -_3*0 -_1*1 -_0*0', 20.040018750000016),
                           ('+_3*1 +_2*0 +_0*0 -_3*0 -_2*0 -_0*1', -9.538736250000005),
                           ('+_3*1 +_2*0 +_0*1 -_3*0 -_2*0 -_0*0', -9.538736250000005),
                           ('+_3*1 +_2*0 +_0*0 -_3*0 -_2*1 -_0*0', -5.8219712500000025),
                           ('+_3*1 +_2*0 +_0*1 -_3*0 -_2*1 -_0*1', -17.46591375000001),
                           ('+_3*1 +_2*0 +_1*0 -_3*0 -_2*1 -_1*0', -2.8691487500000012),
                           ('+_3*1 +_2*0 +_1*0 -_3*0 -_2*1 -_1*1', 17.15529085952823),
                           ('+_3*1 +_2*0 +_1*1 -_3*0 -_2*1 -_1*0', 17.15529085952823),
                           ('+_3*1 +_2*0 +_1*1 -_3*0 -_2*1 -_1*1', -8.607446250000004),
                           ('+_3*1 +_2*1 +_0*0 -_3*0 -_2*0 -_0*0', -5.8219712500000025),
                           ('+_3*1 +_2*1 +_0*1 -_3*0 -_2*0 -_0*1', -17.46591375000001),
                           ('+_3*1 +_2*1 +_1*0 -_3*0 -_2*0 -_1*0', -2.8691487500000012),
                           ('+_3*1 +_2*1 +_1*0 -_3*0 -_2*0 -_1*1', 17.15529085952823),
                           ('+_3*1 +_2*1 +_1*1 -_3*0 -_2*0 -_1*0', 17.15529085952823),
                           ('+_3*1 +_2*1 +_1*1 -_3*0 -_2*0 -_1*1', -8.607446250000004),
                           ('+_3*1 +_2*1 +_0*0 -_3*0 -_2*1 -_0*1', -28.61620875000002),
                           ('+_3*1 +_2*1 +_0*1 -_3*0 -_2*1 -_0*0', -28.61620875000002),
                           ('+_3*1 +_2*0 +_0*0 -_3*1 -_2*1 -_0*1', 16.000777500000012),
                           ('+_3*1 +_2*0 +_0*1 -_3*1 -_2*1 -_0*0', 16.000777500000012),
                           ('+_3*1 +_2*1 +_0*0 -_3*1 -_2*0 -_0*1', 16.000777500000012),
                           ('+_3*1 +_2*1 +_0*1 -_3*1 -_2*0 -_0*0', 16.000777500000012)]

        watson_hamiltonian = driver.run()
        basis_size = 2
        truncation_order = 3
        num_modes = watson_hamiltonian.num_modes
        basis_size = [basis_size] * num_modes
        boson_hamilt_harm_basis = HarmonicBasis(watson_hamiltonian,  # type: ignore
                                                basis_size, truncation_order).convert()
        labels = _create_labels(boson_hamilt_harm_basis, truncation_order)
        assert labels == expected_labels
